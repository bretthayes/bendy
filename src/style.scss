/**
 * GRID SETTINGS
 */

// Set the number of columns you want to use on your layout.
$grid-columns: 12 !default;

// Set the gutter between columns.
$gutter-width: 30px !default;

// Set a margin for the container sides.
$outer-margin: 30px !default;

// Create or remove breakpoints for your project
// Syntax: name SIZErem,
// Breakpoints in pixels: sm 480px, md 768px, lg 992px, xl 1200px, xxl 1440px
// Breakpoints in rems: sm 30rem, md 48rem, lg 62rem, xl 75rem, xxl 90rem
$breakpoints: (sm: 30rem, md: 48rem, lg: 62rem, xl: 75rem, xxl: 90rem) !default;
$flexboxgrid-max-width: 1440px !default;

/**
 * CORE
 */

$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

.container {
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  padding-right: $outer-margin;
  padding-left: $outer-margin;
  margin: 0 auto;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $outer-margin;
  padding-left: $outer-margin;
}

.row {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  box-sizing: border-box;
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

.reverseRow {
  flex-direction: row-reverse;
}

.reverseCol {
  flex-direction: column-reverse;
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

$name: xs;

.col-#{$name} {
  @include flexboxgrid-sass-col-common;
  flex-basis: auto;
}

@for $i from 1 through $grid-columns {
  .col-#{$name}-#{$i} {
    @include flexboxgrid-sass-col-common;
    flex-basis: (100% / $grid-columns * $i);
    max-width: (100% / $grid-columns * $i);
  }
}

@for $i from 0 through $grid-columns {
  .col-#{$name}-offset-#{$i} {
    @include flexboxgrid-sass-col-common;
    @if $i == 0 {
      margin-left: 0;
    }
    @else {
      margin-left: (100% / $grid-columns * $i);
    }
  }
}

.col-#{$name} {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

.start-#{$name} {
  justify-content: flex-start;
  text-align: start;
}

.center-#{$name} {
  justify-content: center;
  text-align: center;
}

.end-#{$name} {
  justify-content: flex-end;
  text-align: end;
}

.top-#{$name} {
  align-items: flex-start;
}

.middle-#{$name} {
  align-items: center;
}

.bottom-#{$name} {
  align-items: flex-end;
}

.around-#{$name} {
  justify-content: space-around;
}

.between-#{$name} {
  justify-content: space-between;
}

.first-#{$name} {
  order: -1;
}

.last-#{$name} {
  order: 1;
}

@each $name, $size in $breakpoints {
  @media only screen and (min-width: $size) {
    .container {
      width: $size;
    }
    .col-#{$name} {
      @include flexboxgrid-sass-col-common;
      flex-basis: auto;
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-#{$i} {
        @include flexboxgrid-sass-col-common;
        flex-basis: (100% / $grid-columns * $i);
        max-width: (100% / $grid-columns * $i);
      }
    }
    @for $i from 0 through $grid-columns {
      .col-#{$name}-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        @if $i == 0 {
          margin-left: 0;
        }
        @else {
          margin-left: (100% / $grid-columns * $i);
        }
      }
    }
    .col-#{$name} {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
    }
    .start-#{$name} {
      justify-content: flex-start;
      text-align: start;
    }
    .center-#{$name} {
      justify-content: center;
      text-align: center;
    }
    .end-#{$name} {
      justify-content: flex-end;
      text-align: end;
    }
    .top-#{$name} {
      align-items: flex-start;
    }
    .middle-#{$name} {
      align-items: center;
    }
    .bottom-#{$name} {
      align-items: flex-end;
    }
    .around-#{$name} {
      justify-content: space-around;
    }
    .between-#{$name} {
      justify-content: space-between;
    }
    .first-#{$name} {
      order: -1;
    }
    .last-#{$name} {
      order: 1;
    }
  }
}
